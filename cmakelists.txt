cmake_minimum_required( VERSION 3.10 )

###################
# bimg Library
###################

# File Setup
file( GLOB_RECURSE bimgSourceFiles
	Libraries/bimg/src/*.cpp
	Libraries/bimg/src/*.h
	Libraries/bimg/include/bimg/*.h
	Libraries/bimg/3rdparty/astc-encoder/source/*.cpp
)
file( GLOB bimgSourceFilesNonRecursive
	Libraries/bimg/3rdparty/astc-codec/src/decoder/*.cc
)
list( APPEND bimgSourceFiles ${bimgSourceFilesNonRecursive} )
source_group( TREE ${CMAKE_CURRENT_SOURCE_DIR}/Libraries/bimg FILES ${bimgSourceFiles} )

# Project Creation
add_library( bimg ${bimgSourceFiles} )

set_target_properties( bimg PROPERTIES FOLDER "bgfx" )

target_include_directories( bimg PUBLIC
	Libraries/bimg/include
	Libraries/bimg/3rdparty
	Libraries/bimg/3rdparty/astc-codec/include
	Libraries/bimg/3rdparty/astc-codec
	Libraries/bimg/3rdparty/astc-encoder/include
	Libraries/bimg/3rdparty/iqa/include
	Libraries/bimg/3rdparty/tinyexr/deps/miniz
	Libraries/bx/include
	Libraries/bx/include/compat/msvc
)

target_compile_features( bimg PRIVATE cxx_std_20 )
target_compile_options( bimg PUBLIC "/Zc:__cplusplus" )
target_compile_definitions( bimg PUBLIC "BX_CONFIG_DEBUG=1" )

# PCH Files
#target_precompile_headers( bimg PRIVATE Source/CoreHeaders.h )
#file( GLOB_RECURSE bimgPCHFiles ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/cmake_pch.* )
#source_group( "CMake PCH Files" FILES ${bimgPCHFiles} )

###################
# bx Library
###################

# File Setup
file( GLOB_RECURSE bxSourceFiles
	Libraries/bx/src/amalgamated.cpp
	Libraries/bx/include/bx/*.h
	Libraries/bx/include/compat/msvc/*.h
)
source_group( TREE ${CMAKE_CURRENT_SOURCE_DIR}/Libraries/bx FILES ${bxSourceFiles} )

# Project Creation
add_library( bx ${bxSourceFiles} )

set_target_properties( bx PROPERTIES FOLDER "bgfx" )

target_include_directories( bx PUBLIC
	Libraries/bx/include
	Libraries/bx/include/compat/msvc
	Libraries/bx/3rdparty
)

target_compile_features( bx PRIVATE cxx_std_20 )
target_compile_options( bx PUBLIC "/Zc:__cplusplus" )
target_compile_definitions( bx PUBLIC "BX_CONFIG_DEBUG=1" )
target_compile_definitions( bx PUBLIC "__STDC_FORMAT_MACROS" )
target_compile_definitions( bx PUBLIC "_CRT_SECURE_NO_WARNINGS" )

# PCH Files
#target_precompile_headers( bx PRIVATE Source/CoreHeaders.h )
#file( GLOB_RECURSE bxPCHFiles ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/cmake_pch.* )
#source_group( "CMake PCH Files" FILES ${bxPCHFiles} )

###################
# bgfx Library
###################

add_compile_options(/wd4244) # 'argument': conversion from 'double' to 'btScalar', possible loss of data
add_compile_options(/wd4267) # '=': conversion from 'size_t' to 'long', possible loss of data
add_compile_options(/wd4305) # 'initializing': truncation from 'double' to 'btScalar'

# File Setup
file( GLOB_RECURSE bgfxSourceFiles
	Libraries/bgfx/src/amalgamated.cpp
	Libraries/bgfx/src/*.h
	Libraries/bgfx/include/bgfx/*.h
)
source_group( TREE ${CMAKE_CURRENT_SOURCE_DIR}/Libraries/bgfx FILES ${bgfxSourceFiles} )

# Project Creation
add_library( bgfx ${bgfxSourceFiles} )

set_target_properties( bgfx PROPERTIES FOLDER "bgfx" )

target_include_directories( bgfx PUBLIC
	Libraries/bgfx/include
	Libraries/bgfx/3rdParty
	Libraries/bgfx/3rdparty/directx-headers/include/directx
	Libraries/bgfx/3rdParty/khronos
	Libraries/bx/include
	Libraries/bx/include/compat/msvc
	Libraries/bimg/include
	Libraries/bimg/3rdParty
)

target_compile_features( bgfx PRIVATE cxx_std_20 )
target_compile_options( bgfx PUBLIC "/Zc:__cplusplus" )
target_compile_definitions( bgfx PUBLIC "BX_CONFIG_DEBUG=1" )
target_compile_definitions( bgfx PUBLIC "__STDC_FORMAT_MACROS" )
target_compile_definitions( bgfx PUBLIC "_CRT_SECURE_NO_WARNINGS" )

add_compile_options(/w44244)
add_compile_options(/w44267)
add_compile_options(/w44305)

# PCH Files
#target_precompile_headers( bgfx PRIVATE Source/CoreHeaders.h )
#file( GLOB_RECURSE bgfxPCHFiles ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/cmake_pch.* )
#source_group( "CMake PCH Files" FILES ${bgfxPCHFiles} )

###################
# Flecs
###################

option( FLECS_SHARED OFF )
option( FLECS_PIC OFF )
add_subdirectory( Libraries/flecs )

###################
# Framework Library
###################

# File Setup
file( GLOB_RECURSE FrameworkSourceFiles
	Source/*.cpp
	Source/*.h
	Libraries/EnkiTS/LockLessMultiReadPipe.h
	Libraries/EnkiTS/TaskScheduler.cpp
	Libraries/EnkiTS/TaskScheduler.h
	Libraries/pcg-cpp/include/*.hpp
	Libraries/stb/*.h
)
file( GLOB FrameworkSourceFilesNonRecursive
	Libraries/imgui/*.cpp
	Libraries/imgui/*.h
	Libraries/ImGuizmo/*.cpp
	Libraries/ImGuizmo/*.h
	Libraries/ImFileDialog/ImFileDialog.cpp
	Libraries/ImFileDialog/ImFileDialog.h
)
list( APPEND FrameworkSourceFiles ${FrameworkSourceFilesNonRecursive} )
source_group( TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${FrameworkSourceFiles} )

# Project Creation
add_library( Framework ${FrameworkSourceFiles} )

target_include_directories( Framework PUBLIC
	Source
	Libraries
	Libraries/bgfx/include
	Libraries/bgfx/3rdParty
	Libraries/bgfx/3rdParty/dxsdk/include
	Libraries/bgfx/3rdParty/khronos
	Libraries/bx/include
	Libraries/bx/include/compat/msvc
	Libraries/bimg/include
	Libraries/bimg/3rdParty
	Libraries/imgui
	Libraries/stb
)

target_link_libraries( Framework PUBLIC
	bgfx
	bimg
	bx
	flecs::flecs_static
)

set_source_files_properties(
	Libraries/ImFileDialog/ImFileDialog.cpp
	PROPERTIES
	COMPILE_FLAGS "/wd4996" # This function or variable may be unsafe. Consider using "" instead.
)

target_compile_features( Framework PRIVATE cxx_std_20 )
target_compile_options( Framework PUBLIC "/Zc:__cplusplus" )
target_compile_definitions( Framework PUBLIC "BX_CONFIG_DEBUG=1" )

# PCH Files
target_precompile_headers( Framework PRIVATE Source/CoreHeaders.h )
file( GLOB_RECURSE FrameworkPCHFiles ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/cmake_pch.* )
source_group( "CMake PCH Files" FILES ${FrameworkPCHFiles} )
